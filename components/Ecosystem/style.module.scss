@use "@styles/colors";
@use "@styles/media";

.main {
    position: relative;
    margin-bottom: 72px;
    
    &::before {
        content: "";
        position: absolute;
        display: block;
        top: 8%;
        left: -15%;
        height: 80%;
        width: 150%;
        z-index: -1;
        
        background: colors.$background;
        transform: rotate(-12deg);
        
        @include media.bp("desktop") {
            top: 20%;
        }
    }

    @include media.bp("desktop") {
        margin-bottom: 268px;
    }
}

.grid {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    
    img {
        width: 60%;
        height: fit-content;
    }

    @include media.bp("desktop") {
        margin-top: 80px;
        flex-direction: row;
    }
}

.side {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 8px;
    place-items: center;

    &.left > :first-child {
        grid-row: 1;
        grid-column: 1 / 4;
        place-self: center;
    }
    
    &.right > :last-child {
        grid-row: 2;
        grid-column: 1 / 4;
        place-self: center;
    }

    @include media.bp("desktop") {
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(3, 1fr);
        gap: 21px;
        
        &.left > :first-child {
            grid-column: 1;
            grid-row: 1 / 4;
            place-self: center;
        }
        
        &.right > :last-child {
            grid-column: 2;
            grid-row: 1 / 4;
            place-self: center;
        }
    }
}

@mixin on-circle($item-count, $circle-size, $item-size, $rotation) {
    position: relative;
    width:  $circle-size;
    height: $circle-size;
    padding: 0;
    list-style: none;

    > .item {
        position: absolute;
        top: 50%;
        left: 50%;
        width: $item-size;
        height: $item-size;
        margin: -($item-size / 2);

        $angle: (360 / $item-count);
        @for $i from 1 through $item-count {
            &:nth-of-type(#{$i}) {
                transform: rotate($rotation * 1deg) translate($circle-size / 2) rotate($rotation * -1deg);
            }

            $rotation: $rotation + $angle;
        }

        &.big {
            $item-size: 2 * $item-size;

            width: $item-size;
            height: $item-size;
            margin: -($item-size / 2);

            outline: 3px solid colors.$primary;
            outline-offset: - $circle-size / 20;
        }
    }
}

.circular {
    margin: 36px 0;
    border-radius: 50%;

    @include on-circle($item-count: 10, $circle-size: 316px, $item-size: 92px, $rotation: 288);
    
    @include media.bp("desktop") {
        margin: 0 67px;

        @include on-circle($item-count: 10, $circle-size: 475px, $item-size: 135px, $rotation: 270);
    }
}

.item {
    width: 92px;
    height: 92px;
    display: grid;
    place-items: center;
    background: white;
    border: 1px solid colors.$stroke;
    border-radius: 1000px;
    box-shadow: 0px 1.8px 2.7px 0px hsla(0, 0%, 0%, 0.06);
    
    @include media.bp("desktop") {
        width: 135px;
        height: 135px;
    }
}
